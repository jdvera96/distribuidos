-- MySQL Script generated by MySQL Workbench
-- Thu Aug 15 20:17:53 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_polylost
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `db_polylost` ;

-- -----------------------------------------------------
-- Schema db_polylost
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_polylost` DEFAULT CHARACTER SET utf8 ;
USE `db_polylost` ;

-- -----------------------------------------------------
-- Table `db_polylost`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_polylost`.`usuario` (
  `cedula` VARCHAR(10) NOT NULL,
  `matricula` VARCHAR(9) NULL,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `idRolUsuario` VARCHAR(1) NULL,
  `nombreUsuario` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `telefono` VARCHAR(10) NULL,
  `whatsapp` TINYINT NULL,
  `eliminadoE` TINYINT NULL,
  `correo` VARCHAR(45) NULL,
  `direccion` VARCHAR(45) NULL,
  PRIMARY KEY (`cedula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_polylost`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_polylost`.`categoria` (
  `idcategoria` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idcategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_polylost`.`objeto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_polylost`.`objeto` (
  `idobjeto` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `imagenO` VARCHAR(100) NULL,
  `estadoR` TINYINT NULL,
  `fechaRO` DATE NULL,
  `descripcion` VARCHAR(100) NULL,
  `color` VARCHAR(45) NULL,
  `horaRegistro` VARCHAR(45) NULL,
  `eliminadoO` TINYINT NULL,
  `calificacionEO` INT NULL,
  `idcategoria` INT NOT NULL,
  `idAdmin` VARCHAR(10) NOT NULL,
  `idEstudiante` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idobjeto`),
  CONSTRAINT `fk_objeto_categoria1`
    FOREIGN KEY (`idcategoria`)
    REFERENCES `db_polylost`.`categoria` (`idcategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_objeto_usuario1`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `db_polylost`.`usuario` (`cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_objeto_usuario2`
    FOREIGN KEY (`idEstudiante`)
    REFERENCES `db_polylost`.`usuario` (`cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_objeto_categoria1_idx` ON `db_polylost`.`objeto` (`idcategoria` ASC) VISIBLE;

CREATE INDEX `fk_objeto_usuario1_idx` ON `db_polylost`.`objeto` (`idAdmin` ASC) VISIBLE;

CREATE INDEX `fk_objeto_usuario2_idx` ON `db_polylost`.`objeto` (`idEstudiante` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db_polylost`.`encuentro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_polylost`.`encuentro` (
  `idEncuentro` INT NOT NULL AUTO_INCREMENT,
  `estadoE` TINYINT NULL,
  `facultad` VARCHAR(45) NULL,
  `horaE` VARCHAR(25) NULL,
  `fechaE` DATE NULL,
  `referenciaE` VARCHAR(100) NULL,
  `idReclamador` VARCHAR(10) NOT NULL,
  `idObjeto` INT NOT NULL,
  PRIMARY KEY (`idEncuentro`),
  CONSTRAINT `fk_encuentro_usuario1`
    FOREIGN KEY (`idReclamador`)
    REFERENCES `db_polylost`.`usuario` (`cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_encuentro_objeto1`
    FOREIGN KEY (`idObjeto`)
    REFERENCES `db_polylost`.`objeto` (`idobjeto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_encuentro_usuario1_idx` ON `db_polylost`.`encuentro` (`idReclamador` ASC) VISIBLE;

CREATE INDEX `fk_encuentro_objeto1_idx` ON `db_polylost`.`encuentro` (`idObjeto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db_polylost`.`calificacionE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_polylost`.`calificacionE` (
  `idcalificacionE` INT NOT NULL AUTO_INCREMENT,
  `calificacion` INT NULL,
  `fechaCalificacionE` DATE NULL,
  `IdEstudiante` VARCHAR(10) NOT NULL,
  `IdReclamador` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idcalificacionE`),
  CONSTRAINT `fk_calificacionE_usuario1`
    FOREIGN KEY (`IdEstudiante`)
    REFERENCES `db_polylost`.`usuario` (`cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_calificacionE_usuario2`
    FOREIGN KEY (`IdReclamador`)
    REFERENCES `db_polylost`.`usuario` (`cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_calificacionE_usuario1_idx` ON `db_polylost`.`calificacionE` (`IdEstudiante` ASC) VISIBLE;

CREATE INDEX `fk_calificacionE_usuario2_idx` ON `db_polylost`.`calificacionE` (`IdReclamador` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db_polylost`.`subcategoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_polylost`.`subcategoria` (
  `idsubcategoria` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `idcategoria` INT NOT NULL,
  PRIMARY KEY (`idsubcategoria`),
  CONSTRAINT `fk_subcategoria_categoria1`
    FOREIGN KEY (`idcategoria`)
    REFERENCES `db_polylost`.`categoria` (`idcategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_subcategoria_categoria1_idx` ON `db_polylost`.`subcategoria` (`idcategoria` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
